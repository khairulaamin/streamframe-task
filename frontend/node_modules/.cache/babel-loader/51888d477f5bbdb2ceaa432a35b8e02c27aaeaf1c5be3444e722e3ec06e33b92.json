{"ast":null,"code":"import React,{useEffect,useState,useCallback}from'react';import{BrowserRouter as Router,Route,Routes,Link}from'react-router-dom';import'./App.css';import TaskFormPage from'./pages/TaskFormPage';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";// Function to render tasks recursively\nconst RenderTasks=_ref=>{let{tasks,toggleTaskStatus,handleEditTask,editingTaskId,newTaskName,setNewTaskName,handleSaveEdit}=_ref;return/*#__PURE__*/_jsx(\"div\",{className:\"task-list\",children:tasks.map(task=>/*#__PURE__*/_jsxs(\"div\",{className:\"task-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"task-header\",children:editingTaskId===task.id?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newTaskName,onChange:e=>setNewTaskName(e.target.value),placeholder:\"New task name\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSaveEdit,children:\"Save\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleEditTask(task),children:\"Cancel\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"strong\",{children:[\"Task \",task.name,\" (ID: \",task.id,\")\"]}),\" - Status: \",task.status,/*#__PURE__*/_jsxs(\"div\",{className:\"task-counts\",children:[\"Dependencies: \",task.dependencyCount||0,\" | Done: \",task.doneCount||0,\" | Complete: \",task.completeCount||0]}),/*#__PURE__*/_jsxs(\"label\",{className:\"task-checkbox\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:task.status==='DONE'||task.status==='COMPLETE',onChange:()=>toggleTaskStatus(task)}),task.status==='DONE'||task.status==='COMPLETE'?' Mark as IN PROGRESS':' Mark as DONE']}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleEditTask(task),children:\"Edit\"})]})}),task.children.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"child-tasks\",children:/*#__PURE__*/_jsx(RenderTasks,{tasks:task.children,toggleTaskStatus:toggleTaskStatus,handleEditTask:handleEditTask,editingTaskId:editingTaskId,newTaskName:newTaskName,setNewTaskName:setNewTaskName,handleSaveEdit:handleSaveEdit})})]},task.id))});};const TaskList=()=>{const[tasks,setTasks]=useState([]);const[filter,setFilter]=useState('ALL');const[editingTaskId,setEditingTaskId]=useState(null);const[newTaskName,setNewTaskName]=useState('');const fetchTasks=useCallback(async()=>{try{const response=await fetch('http://localhost:5000/tasks');if(!response.ok){throw new Error('Failed to fetch tasks');}const data=await response.json();const tasksWithDependencies=await Promise.all(data.map(async task=>{const dependencyCount=await fetchDependencyCount(task.id);const doneCount=await fetchDoneCount(task.id);const completeCount=await fetchCompleteCount(task.id);return{...task,dependencyCount,doneCount,completeCount,children:[]};}));setTasks(tasksWithDependencies);}catch(error){console.error('Error fetching tasks:',error);}},[]);const fetchDependencyCount=async taskId=>{try{const response=await fetch(`http://localhost:5000/tasks/${taskId}/dependencies`);if(!response.ok){throw new Error('Failed to fetch dependency count');}const data=await response.json();return data.dependencyCount||0;}catch(error){console.error('Error fetching dependency count:',error);return 0;}};const fetchDoneCount=async taskId=>{try{const response=await fetch(`http://localhost:5000/tasks/${taskId}/done-count`);if(!response.ok){throw new Error('Failed to fetch DONE count');}const data=await response.json();return data.doneCount||0;}catch(error){console.error('Error fetching DONE count:',error);return 0;}};const fetchCompleteCount=async taskId=>{try{const response=await fetch(`http://localhost:5000/tasks/${taskId}/complete-count`);if(!response.ok){throw new Error('Failed to fetch COMPLETE count');}const data=await response.json();return data.completeCount||0;}catch(error){console.error('Error fetching COMPLETE count:',error);return 0;}};const toggleTaskStatus=async task=>{let updatedStatus;const children=tasks.filter(t=>t.parent_task_id===task.id);if(children.length===0){updatedStatus=task.status==='COMPLETE'?'IN_PROGRESS':'COMPLETE';}else{const allComplete=children.every(child=>child.status==='COMPLETE');const someInProgress=children.some(child=>child.status==='IN_PROGRESS');if(task.status==='COMPLETE'){updatedStatus='IN_PROGRESS';}else if(someInProgress){updatedStatus='DONE';}else{updatedStatus='COMPLETE';}}try{const response=await fetch(`http://localhost:5000/tasks/${task.id}`,{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify({...task,status:updatedStatus})});if(!response.ok){throw new Error('Failed to update task status');}setTasks(prevTasks=>prevTasks.map(t=>{if(t.id===task.id){return{...t,status:updatedStatus};}return t;}));const parentId=task.parent_task_id;if(parentId){const siblings=tasks.filter(t=>t.parent_task_id===parentId);const allComplete=siblings.every(sibling=>sibling.status==='COMPLETE');if(allComplete){await fetch(`http://localhost:5000/tasks/${parentId}`,{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify({status:'COMPLETE'})});setTasks(prevTasks=>prevTasks.map(t=>{if(t.id===parentId){return{...t,status:'COMPLETE'};}return t;}));}}window.location.reload();}catch(error){console.error('Error updating task status:',error);alert('Failed to update task status. Please try again.');}};const handleEditTask=task=>{setEditingTaskId(task.id);setNewTaskName(task.name);};const handleSaveEdit=async()=>{if(editingTaskId!==null){try{const response=await fetch(`http://localhost:5000/tasks/edit-name/${editingTaskId}`,{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify({...tasks.find(t=>t.id===editingTaskId),name:newTaskName})});if(!response.ok){throw new Error('Failed to update task name');}setTasks(prevTasks=>prevTasks.map(t=>t.id===editingTaskId?{...t,name:newTaskName}:t));setEditingTaskId(null);setNewTaskName('');}catch(error){console.error('Error updating task name:',error);alert('Failed to update task name. Please try again.');}}};const filteredTasks=tasks.filter(task=>{if(filter==='ALL')return true;if(filter==='IN_PROGRESS')return task.status==='IN_PROGRESS'||tasks.some(t=>t.parent_task_id===task.id&&t.status==='IN_PROGRESS');if(filter==='DONE')return task.status==='DONE'||tasks.some(t=>t.parent_task_id===task.id&&t.status==='DONE');if(filter==='COMPLETE')return task.status==='COMPLETE'||tasks.some(t=>t.parent_task_id===task.id&&t.status==='COMPLETE');return false;});// Function to build a nested structure\nconst buildTaskHierarchy=tasks=>{const taskMap={};const hierarchy=[];tasks.forEach(task=>{taskMap[task.id]={...task,children:[]};});tasks.forEach(task=>{if(task.parent_task_id===null){hierarchy.push(taskMap[task.id]);}else{var _taskMap$task$parent_;(_taskMap$task$parent_=taskMap[task.parent_task_id])===null||_taskMap$task$parent_===void 0?void 0:_taskMap$task$parent_.children.push(taskMap[task.id]);}});return hierarchy;};const taskHierarchy=buildTaskHierarchy(filteredTasks);useEffect(()=>{fetchTasks();},[fetchTasks]);return/*#__PURE__*/_jsxs(\"div\",{className:\"task-list-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Task Listing\"}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Filter by status:\",/*#__PURE__*/_jsxs(\"select\",{value:filter,onChange:e=>setFilter(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"ALL\",children:\"All\"}),/*#__PURE__*/_jsx(\"option\",{value:\"IN_PROGRESS\",children:\"IN PROGRESS\"}),/*#__PURE__*/_jsx(\"option\",{value:\"DONE\",children:\"DONE\"}),/*#__PURE__*/_jsx(\"option\",{value:\"COMPLETE\",children:\"COMPLETE\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"task-list\",children:/*#__PURE__*/_jsx(RenderTasks,{tasks:taskHierarchy,toggleTaskStatus:toggleTaskStatus,handleEditTask:handleEditTask,editingTaskId:editingTaskId,newTaskName:newTaskName,setNewTaskName:setNewTaskName,handleSaveEdit:handleSaveEdit})})]});};const App=()=>{return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sidebar\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Sidebar\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:\"/\",children:\"Task List\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:\"/new-task\",children:\"Add New Task\"})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"main-content\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(TaskList,{})}),/*#__PURE__*/_jsx(Route,{path:\"/new-task\",element:/*#__PURE__*/_jsx(TaskFormPage,{})})]})})]})});};export default App;","map":{"version":3,"names":["React","useEffect","useState","useCallback","BrowserRouter","Router","Route","Routes","Link","TaskFormPage","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","RenderTasks","_ref","tasks","toggleTaskStatus","handleEditTask","editingTaskId","newTaskName","setNewTaskName","handleSaveEdit","className","children","map","task","id","type","value","onChange","e","target","placeholder","onClick","name","status","dependencyCount","doneCount","completeCount","checked","length","TaskList","setTasks","filter","setFilter","setEditingTaskId","fetchTasks","response","fetch","ok","Error","data","json","tasksWithDependencies","Promise","all","fetchDependencyCount","fetchDoneCount","fetchCompleteCount","error","console","taskId","updatedStatus","t","parent_task_id","allComplete","every","child","someInProgress","some","method","headers","body","JSON","stringify","prevTasks","parentId","siblings","sibling","window","location","reload","alert","find","filteredTasks","buildTaskHierarchy","taskMap","hierarchy","forEach","push","_taskMap$task$parent_","taskHierarchy","App","to","path","element"],"sources":["C:/Users/Acer/streamframe-task-manager/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport './App.css';\nimport TaskFormPage from './pages/TaskFormPage';\n\ninterface Task {\n  id: number;\n  name: string;\n  status: 'IN_PROGRESS' | 'DONE' | 'COMPLETE';\n  parent_task_id: number | null;\n  dependencyCount?: number;\n  doneCount?: number;\n  completeCount?: number;\n  children: Task[]; // Ensure children is always initialized as an array\n}\n\n// Function to render tasks recursively\nconst RenderTasks = ({\n  tasks,\n  toggleTaskStatus,\n  handleEditTask,\n  editingTaskId,\n  newTaskName,\n  setNewTaskName,\n  handleSaveEdit,\n}: {\n  tasks: Task[];\n  toggleTaskStatus: (task: Task) => void;\n  handleEditTask: (task: Task) => void;\n  editingTaskId: number | null;\n  newTaskName: string;\n  setNewTaskName: React.Dispatch<React.SetStateAction<string>>;\n  handleSaveEdit: () => void;\n}) => (\n  <div className=\"task-list\">\n    {tasks.map(task => (\n      <div key={task.id} className=\"task-item\">\n        <div className=\"task-header\">\n          {editingTaskId === task.id ? (\n            <>\n              <input\n                type=\"text\"\n                value={newTaskName}\n                onChange={(e) => setNewTaskName(e.target.value)}\n                placeholder=\"New task name\"\n              />\n              <button onClick={handleSaveEdit}>Save</button>\n              <button onClick={() => handleEditTask(task)}>Cancel</button>\n            </>\n          ) : (\n            <>\n              <strong>Task {task.name} (ID: {task.id})</strong> - Status: {task.status}\n              <div className=\"task-counts\">\n                Dependencies: {task.dependencyCount || 0} | Done: {task.doneCount || 0} | Complete: {task.completeCount || 0}\n              </div>\n              <label className=\"task-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  checked={task.status === 'DONE' || task.status === 'COMPLETE'}\n                  onChange={() => toggleTaskStatus(task)}\n                />\n                {task.status === 'DONE' || task.status === 'COMPLETE' ? ' Mark as IN PROGRESS' : ' Mark as DONE'}\n              </label>\n              <button onClick={() => handleEditTask(task)}>Edit</button>\n            </>\n          )}\n        </div>\n        {task.children.length > 0 && (\n          <div className=\"child-tasks\">\n            <RenderTasks\n              tasks={task.children}\n              toggleTaskStatus={toggleTaskStatus}\n              handleEditTask={handleEditTask}\n              editingTaskId={editingTaskId}\n              newTaskName={newTaskName}\n              setNewTaskName={setNewTaskName}\n              handleSaveEdit={handleSaveEdit}\n            />\n          </div>\n        )}\n      </div>\n    ))}\n  </div>\n);\n\nconst TaskList: React.FC = () => {\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [filter, setFilter] = useState<'ALL' | 'IN_PROGRESS' | 'DONE' | 'COMPLETE'>('ALL');\n  const [editingTaskId, setEditingTaskId] = useState<number | null>(null);\n  const [newTaskName, setNewTaskName] = useState<string>('');\n\n  \n\n  const fetchTasks = useCallback(async () => {\n    try {\n      const response = await fetch('http://localhost:5000/tasks');\n      if (!response.ok) {\n        throw new Error('Failed to fetch tasks');\n      }\n      const data: Task[] = await response.json();\n\n      const tasksWithDependencies = await Promise.all(\n        data.map(async (task) => {\n          const dependencyCount = await fetchDependencyCount(task.id);\n          const doneCount = await fetchDoneCount(task.id);\n          const completeCount = await fetchCompleteCount(task.id);\n          return { ...task, dependencyCount, doneCount, completeCount, children: [] };\n        })\n      );\n\n      setTasks(tasksWithDependencies);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  }, []);\n\n  const fetchDependencyCount = async (taskId: number) => {\n    try {\n      const response = await fetch(`http://localhost:5000/tasks/${taskId}/dependencies`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch dependency count');\n      }\n      const data = await response.json();\n      return data.dependencyCount || 0;\n    } catch (error) {\n      console.error('Error fetching dependency count:', error);\n      return 0;\n    }\n  };\n\n  const fetchDoneCount = async (taskId: number) => {\n    try {\n      const response = await fetch(`http://localhost:5000/tasks/${taskId}/done-count`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch DONE count');\n      }\n      const data = await response.json();\n      return data.doneCount || 0;\n    } catch (error) {\n      console.error('Error fetching DONE count:', error);\n      return 0;\n    }\n  };\n\n  const fetchCompleteCount = async (taskId: number) => {\n    try {\n      const response = await fetch(`http://localhost:5000/tasks/${taskId}/complete-count`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch COMPLETE count');\n      }\n      const data = await response.json();\n      return data.completeCount || 0;\n    } catch (error) {\n      console.error('Error fetching COMPLETE count:', error);\n      return 0;\n    }\n  };\n\n  const toggleTaskStatus = async (task: Task) => {\n    let updatedStatus: 'IN_PROGRESS' | 'DONE' | 'COMPLETE';\n\n    const children = tasks.filter(t => t.parent_task_id === task.id);\n\n    if (children.length === 0) {\n      updatedStatus = task.status === 'COMPLETE' ? 'IN_PROGRESS' : 'COMPLETE';\n    } else {\n      const allComplete = children.every(child => child.status === 'COMPLETE');\n      const someInProgress = children.some(child => child.status === 'IN_PROGRESS');\n\n      if (task.status === 'COMPLETE') {\n        updatedStatus = 'IN_PROGRESS';\n      } else if (someInProgress) {\n        updatedStatus = 'DONE';\n      } else {\n        updatedStatus = 'COMPLETE';\n      }\n    }\n\n    try {\n      const response = await fetch(`http://localhost:5000/tasks/${task.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ ...task, status: updatedStatus }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to update task status');\n      }\n\n      setTasks(prevTasks =>\n        prevTasks.map(t => {\n          if (t.id === task.id) {\n            return { ...t, status: updatedStatus };\n          }\n          return t;\n        })\n      );\n\n      const parentId = task.parent_task_id;\n      if (parentId) {\n        const siblings = tasks.filter(t => t.parent_task_id === parentId);\n        const allComplete = siblings.every(sibling => sibling.status === 'COMPLETE');\n\n        if (allComplete) {\n          await fetch(`http://localhost:5000/tasks/${parentId}`, {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ status: 'COMPLETE' }),\n          });\n\n          setTasks(prevTasks =>\n            prevTasks.map(t => {\n              if (t.id === parentId) {\n                return { ...t, status: 'COMPLETE' };\n              }\n              return t;\n            })\n          );\n        }\n      }\n\n      window.location.reload();\n    } catch (error) {\n      console.error('Error updating task status:', error);\n      alert('Failed to update task status. Please try again.');\n    }\n  };\n\n  const handleEditTask = (task: Task) => {\n    setEditingTaskId(task.id);\n    setNewTaskName(task.name);\n  };\n\n  const handleSaveEdit = async () => {\n    if (editingTaskId !== null) {\n      try {\n        const response = await fetch(`http://localhost:5000/tasks/edit-name/${editingTaskId}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ ...tasks.find(t => t.id === editingTaskId), name: newTaskName }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to update task name');\n        }\n\n        setTasks(prevTasks =>\n          prevTasks.map(t => (t.id === editingTaskId ? { ...t, name: newTaskName } : t))\n        );\n        setEditingTaskId(null);\n        setNewTaskName('');\n      } catch (error) {\n        console.error('Error updating task name:', error);\n        alert('Failed to update task name. Please try again.');\n      }\n    }\n  };\n\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'ALL') return true;\n    if (filter === 'IN_PROGRESS') return task.status === 'IN_PROGRESS' || tasks.some(t => t.parent_task_id === task.id && t.status === 'IN_PROGRESS');\n    if (filter === 'DONE') return task.status === 'DONE' || tasks.some(t => t.parent_task_id === task.id && t.status === 'DONE');\n    if (filter === 'COMPLETE') return task.status === 'COMPLETE' || tasks.some(t => t.parent_task_id === task.id && t.status === 'COMPLETE');\n    return false;\n  });\n\n  // Function to build a nested structure\n  const buildTaskHierarchy = (tasks: Task[]) => {\n    const taskMap: { [key: number]: Task & { children: Task[] } } = {};\n    const hierarchy: (Task & { children: Task[] })[] = [];\n\n    tasks.forEach(task => {\n      taskMap[task.id] = { ...task, children: [] };\n    });\n\n    tasks.forEach(task => {\n      if (task.parent_task_id === null) {\n        hierarchy.push(taskMap[task.id]);\n      } else {\n        taskMap[task.parent_task_id]?.children.push(taskMap[task.id]);\n      }\n    });\n\n    return hierarchy;\n  };\n\n  const taskHierarchy = buildTaskHierarchy(filteredTasks);\n\n  useEffect(() => {\n    fetchTasks();\n  }, [fetchTasks]);\n\n  return (\n    <div className=\"task-list-container\">\n      <h1>Task Listing</h1>\n      <label>\n        Filter by status:\n        <select value={filter} onChange={(e) => setFilter(e.target.value as 'ALL' | 'IN_PROGRESS' | 'DONE' | 'COMPLETE')}>\n          <option value=\"ALL\">All</option>\n          <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n          <option value=\"DONE\">DONE</option>\n          <option value=\"COMPLETE\">COMPLETE</option>\n        </select>\n      </label>\n      <div className=\"task-list\">\n        <RenderTasks\n          tasks={taskHierarchy}\n          toggleTaskStatus={toggleTaskStatus}\n          handleEditTask={handleEditTask}\n          editingTaskId={editingTaskId}\n          newTaskName={newTaskName}\n          setNewTaskName={setNewTaskName}\n          handleSaveEdit={handleSaveEdit}\n        />\n      </div>\n    </div>\n  );\n};\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <div className=\"app-container\">\n        <div className=\"sidebar\">\n          <h2>Sidebar</h2>\n          <ul>\n            <li><Link to=\"/\">Task List</Link></li>\n            <li><Link to=\"/new-task\">Add New Task</Link></li>\n          </ul>\n        </div>\n        <div className=\"main-content\">\n          <Routes>\n            <Route path=\"/\" element={<TaskList />} />\n            <Route path=\"/new-task\" element={<TaskFormPage />} />\n          </Routes>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,CAAEC,WAAW,KAAQ,OAAO,CAC/D,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,KAAK,CAAEC,MAAM,CAAEC,IAAI,KAAQ,kBAAkB,CAC/E,MAAO,WAAW,CAClB,MAAO,CAAAC,YAAY,KAAM,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAahD;AACA,KAAM,CAAAC,WAAW,CAAGC,IAAA,MAAC,CACnBC,KAAK,CACLC,gBAAgB,CAChBC,cAAc,CACdC,aAAa,CACbC,WAAW,CACXC,cAAc,CACdC,cASF,CAAC,CAAAP,IAAA,oBACCN,IAAA,QAAKc,SAAS,CAAC,WAAW,CAAAC,QAAA,CACvBR,KAAK,CAACS,GAAG,CAACC,IAAI,eACbb,KAAA,QAAmBU,SAAS,CAAC,WAAW,CAAAC,QAAA,eACtCf,IAAA,QAAKc,SAAS,CAAC,aAAa,CAAAC,QAAA,CACzBL,aAAa,GAAKO,IAAI,CAACC,EAAE,cACxBd,KAAA,CAAAF,SAAA,EAAAa,QAAA,eACEf,IAAA,UACEmB,IAAI,CAAC,MAAM,CACXC,KAAK,CAAET,WAAY,CACnBU,QAAQ,CAAGC,CAAC,EAAKV,cAAc,CAACU,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAChDI,WAAW,CAAC,eAAe,CAC5B,CAAC,cACFxB,IAAA,WAAQyB,OAAO,CAAEZ,cAAe,CAAAE,QAAA,CAAC,MAAI,CAAQ,CAAC,cAC9Cf,IAAA,WAAQyB,OAAO,CAAEA,CAAA,GAAMhB,cAAc,CAACQ,IAAI,CAAE,CAAAF,QAAA,CAAC,QAAM,CAAQ,CAAC,EAC5D,CAAC,cAEHX,KAAA,CAAAF,SAAA,EAAAa,QAAA,eACEX,KAAA,WAAAW,QAAA,EAAQ,OAAK,CAACE,IAAI,CAACS,IAAI,CAAC,QAAM,CAACT,IAAI,CAACC,EAAE,CAAC,GAAC,EAAQ,CAAC,cAAW,CAACD,IAAI,CAACU,MAAM,cACxEvB,KAAA,QAAKU,SAAS,CAAC,aAAa,CAAAC,QAAA,EAAC,gBACb,CAACE,IAAI,CAACW,eAAe,EAAI,CAAC,CAAC,WAAS,CAACX,IAAI,CAACY,SAAS,EAAI,CAAC,CAAC,eAAa,CAACZ,IAAI,CAACa,aAAa,EAAI,CAAC,EACzG,CAAC,cACN1B,KAAA,UAAOU,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC9Bf,IAAA,UACEmB,IAAI,CAAC,UAAU,CACfY,OAAO,CAAEd,IAAI,CAACU,MAAM,GAAK,MAAM,EAAIV,IAAI,CAACU,MAAM,GAAK,UAAW,CAC9DN,QAAQ,CAAEA,CAAA,GAAMb,gBAAgB,CAACS,IAAI,CAAE,CACxC,CAAC,CACDA,IAAI,CAACU,MAAM,GAAK,MAAM,EAAIV,IAAI,CAACU,MAAM,GAAK,UAAU,CAAG,sBAAsB,CAAG,eAAe,EAC3F,CAAC,cACR3B,IAAA,WAAQyB,OAAO,CAAEA,CAAA,GAAMhB,cAAc,CAACQ,IAAI,CAAE,CAAAF,QAAA,CAAC,MAAI,CAAQ,CAAC,EAC1D,CACH,CACE,CAAC,CACLE,IAAI,CAACF,QAAQ,CAACiB,MAAM,CAAG,CAAC,eACvBhC,IAAA,QAAKc,SAAS,CAAC,aAAa,CAAAC,QAAA,cAC1Bf,IAAA,CAACK,WAAW,EACVE,KAAK,CAAEU,IAAI,CAACF,QAAS,CACrBP,gBAAgB,CAAEA,gBAAiB,CACnCC,cAAc,CAAEA,cAAe,CAC/BC,aAAa,CAAEA,aAAc,CAC7BC,WAAW,CAAEA,WAAY,CACzBC,cAAc,CAAEA,cAAe,CAC/BC,cAAc,CAAEA,cAAe,CAChC,CAAC,CACC,CACN,GA3COI,IAAI,CAACC,EA4CV,CACN,CAAC,CACC,CAAC,EACP,CAED,KAAM,CAAAe,QAAkB,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAAC1B,KAAK,CAAE2B,QAAQ,CAAC,CAAG3C,QAAQ,CAAS,EAAE,CAAC,CAC9C,KAAM,CAAC4C,MAAM,CAAEC,SAAS,CAAC,CAAG7C,QAAQ,CAA8C,KAAK,CAAC,CACxF,KAAM,CAACmB,aAAa,CAAE2B,gBAAgB,CAAC,CAAG9C,QAAQ,CAAgB,IAAI,CAAC,CACvE,KAAM,CAACoB,WAAW,CAAEC,cAAc,CAAC,CAAGrB,QAAQ,CAAS,EAAE,CAAC,CAI1D,KAAM,CAAA+C,UAAU,CAAG9C,WAAW,CAAC,SAAY,CACzC,GAAI,CACF,KAAM,CAAA+C,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,6BAA6B,CAAC,CAC3D,GAAI,CAACD,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuB,CAAC,CAC1C,CACA,KAAM,CAAAC,IAAY,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAE1C,KAAM,CAAAC,qBAAqB,CAAG,KAAM,CAAAC,OAAO,CAACC,GAAG,CAC7CJ,IAAI,CAAC3B,GAAG,CAAC,KAAO,CAAAC,IAAI,EAAK,CACvB,KAAM,CAAAW,eAAe,CAAG,KAAM,CAAAoB,oBAAoB,CAAC/B,IAAI,CAACC,EAAE,CAAC,CAC3D,KAAM,CAAAW,SAAS,CAAG,KAAM,CAAAoB,cAAc,CAAChC,IAAI,CAACC,EAAE,CAAC,CAC/C,KAAM,CAAAY,aAAa,CAAG,KAAM,CAAAoB,kBAAkB,CAACjC,IAAI,CAACC,EAAE,CAAC,CACvD,MAAO,CAAE,GAAGD,IAAI,CAAEW,eAAe,CAAEC,SAAS,CAAEC,aAAa,CAAEf,QAAQ,CAAE,EAAG,CAAC,CAC7E,CAAC,CACH,CAAC,CAEDmB,QAAQ,CAACW,qBAAqB,CAAC,CACjC,CAAE,MAAOM,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC/C,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAH,oBAAoB,CAAG,KAAO,CAAAK,MAAc,EAAK,CACrD,GAAI,CACF,KAAM,CAAAd,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,+BAA+Ba,MAAM,eAAe,CAAC,CAClF,GAAI,CAACd,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,kCAAkC,CAAC,CACrD,CACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAD,IAAI,CAACf,eAAe,EAAI,CAAC,CAClC,CAAE,MAAOuB,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,CAAEA,KAAK,CAAC,CACxD,MAAO,EAAC,CACV,CACF,CAAC,CAED,KAAM,CAAAF,cAAc,CAAG,KAAO,CAAAI,MAAc,EAAK,CAC/C,GAAI,CACF,KAAM,CAAAd,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,+BAA+Ba,MAAM,aAAa,CAAC,CAChF,GAAI,CAACd,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,4BAA4B,CAAC,CAC/C,CACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAD,IAAI,CAACd,SAAS,EAAI,CAAC,CAC5B,CAAE,MAAOsB,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClD,MAAO,EAAC,CACV,CACF,CAAC,CAED,KAAM,CAAAD,kBAAkB,CAAG,KAAO,CAAAG,MAAc,EAAK,CACnD,GAAI,CACF,KAAM,CAAAd,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,+BAA+Ba,MAAM,iBAAiB,CAAC,CACpF,GAAI,CAACd,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,gCAAgC,CAAC,CACnD,CACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAD,IAAI,CAACb,aAAa,EAAI,CAAC,CAChC,CAAE,MAAOqB,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CACtD,MAAO,EAAC,CACV,CACF,CAAC,CAED,KAAM,CAAA3C,gBAAgB,CAAG,KAAO,CAAAS,IAAU,EAAK,CAC7C,GAAI,CAAAqC,aAAkD,CAEtD,KAAM,CAAAvC,QAAQ,CAAGR,KAAK,CAAC4B,MAAM,CAACoB,CAAC,EAAIA,CAAC,CAACC,cAAc,GAAKvC,IAAI,CAACC,EAAE,CAAC,CAEhE,GAAIH,QAAQ,CAACiB,MAAM,GAAK,CAAC,CAAE,CACzBsB,aAAa,CAAGrC,IAAI,CAACU,MAAM,GAAK,UAAU,CAAG,aAAa,CAAG,UAAU,CACzE,CAAC,IAAM,CACL,KAAM,CAAA8B,WAAW,CAAG1C,QAAQ,CAAC2C,KAAK,CAACC,KAAK,EAAIA,KAAK,CAAChC,MAAM,GAAK,UAAU,CAAC,CACxE,KAAM,CAAAiC,cAAc,CAAG7C,QAAQ,CAAC8C,IAAI,CAACF,KAAK,EAAIA,KAAK,CAAChC,MAAM,GAAK,aAAa,CAAC,CAE7E,GAAIV,IAAI,CAACU,MAAM,GAAK,UAAU,CAAE,CAC9B2B,aAAa,CAAG,aAAa,CAC/B,CAAC,IAAM,IAAIM,cAAc,CAAE,CACzBN,aAAa,CAAG,MAAM,CACxB,CAAC,IAAM,CACLA,aAAa,CAAG,UAAU,CAC5B,CACF,CAEA,GAAI,CACF,KAAM,CAAAf,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,+BAA+BvB,IAAI,CAACC,EAAE,EAAE,CAAE,CACrE4C,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAE,GAAGjD,IAAI,CAAEU,MAAM,CAAE2B,aAAc,CAAC,CACzD,CAAC,CAAC,CAEF,GAAI,CAACf,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,8BAA8B,CAAC,CACjD,CAEAR,QAAQ,CAACiC,SAAS,EAChBA,SAAS,CAACnD,GAAG,CAACuC,CAAC,EAAI,CACjB,GAAIA,CAAC,CAACrC,EAAE,GAAKD,IAAI,CAACC,EAAE,CAAE,CACpB,MAAO,CAAE,GAAGqC,CAAC,CAAE5B,MAAM,CAAE2B,aAAc,CAAC,CACxC,CACA,MAAO,CAAAC,CAAC,CACV,CAAC,CACH,CAAC,CAED,KAAM,CAAAa,QAAQ,CAAGnD,IAAI,CAACuC,cAAc,CACpC,GAAIY,QAAQ,CAAE,CACZ,KAAM,CAAAC,QAAQ,CAAG9D,KAAK,CAAC4B,MAAM,CAACoB,CAAC,EAAIA,CAAC,CAACC,cAAc,GAAKY,QAAQ,CAAC,CACjE,KAAM,CAAAX,WAAW,CAAGY,QAAQ,CAACX,KAAK,CAACY,OAAO,EAAIA,OAAO,CAAC3C,MAAM,GAAK,UAAU,CAAC,CAE5E,GAAI8B,WAAW,CAAE,CACf,KAAM,CAAAjB,KAAK,CAAC,+BAA+B4B,QAAQ,EAAE,CAAE,CACrDN,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEvC,MAAM,CAAE,UAAW,CAAC,CAC7C,CAAC,CAAC,CAEFO,QAAQ,CAACiC,SAAS,EAChBA,SAAS,CAACnD,GAAG,CAACuC,CAAC,EAAI,CACjB,GAAIA,CAAC,CAACrC,EAAE,GAAKkD,QAAQ,CAAE,CACrB,MAAO,CAAE,GAAGb,CAAC,CAAE5B,MAAM,CAAE,UAAW,CAAC,CACrC,CACA,MAAO,CAAA4B,CAAC,CACV,CAAC,CACH,CAAC,CACH,CACF,CAEAgB,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAC1B,CAAE,MAAOtB,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACnDuB,KAAK,CAAC,iDAAiD,CAAC,CAC1D,CACF,CAAC,CAED,KAAM,CAAAjE,cAAc,CAAIQ,IAAU,EAAK,CACrCoB,gBAAgB,CAACpB,IAAI,CAACC,EAAE,CAAC,CACzBN,cAAc,CAACK,IAAI,CAACS,IAAI,CAAC,CAC3B,CAAC,CAED,KAAM,CAAAb,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAIH,aAAa,GAAK,IAAI,CAAE,CAC1B,GAAI,CACF,KAAM,CAAA6B,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,yCAAyC9B,aAAa,EAAE,CAAE,CACrFoD,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAE,GAAG3D,KAAK,CAACoE,IAAI,CAACpB,CAAC,EAAIA,CAAC,CAACrC,EAAE,GAAKR,aAAa,CAAC,CAAEgB,IAAI,CAAEf,WAAY,CAAC,CACxF,CAAC,CAAC,CAEF,GAAI,CAAC4B,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,4BAA4B,CAAC,CAC/C,CAEAR,QAAQ,CAACiC,SAAS,EAChBA,SAAS,CAACnD,GAAG,CAACuC,CAAC,EAAKA,CAAC,CAACrC,EAAE,GAAKR,aAAa,CAAG,CAAE,GAAG6C,CAAC,CAAE7B,IAAI,CAAEf,WAAY,CAAC,CAAG4C,CAAE,CAC/E,CAAC,CACDlB,gBAAgB,CAAC,IAAI,CAAC,CACtBzB,cAAc,CAAC,EAAE,CAAC,CACpB,CAAE,MAAOuC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACjDuB,KAAK,CAAC,+CAA+C,CAAC,CACxD,CACF,CACF,CAAC,CAED,KAAM,CAAAE,aAAa,CAAGrE,KAAK,CAAC4B,MAAM,CAAClB,IAAI,EAAI,CACzC,GAAIkB,MAAM,GAAK,KAAK,CAAE,MAAO,KAAI,CACjC,GAAIA,MAAM,GAAK,aAAa,CAAE,MAAO,CAAAlB,IAAI,CAACU,MAAM,GAAK,aAAa,EAAIpB,KAAK,CAACsD,IAAI,CAACN,CAAC,EAAIA,CAAC,CAACC,cAAc,GAAKvC,IAAI,CAACC,EAAE,EAAIqC,CAAC,CAAC5B,MAAM,GAAK,aAAa,CAAC,CACjJ,GAAIQ,MAAM,GAAK,MAAM,CAAE,MAAO,CAAAlB,IAAI,CAACU,MAAM,GAAK,MAAM,EAAIpB,KAAK,CAACsD,IAAI,CAACN,CAAC,EAAIA,CAAC,CAACC,cAAc,GAAKvC,IAAI,CAACC,EAAE,EAAIqC,CAAC,CAAC5B,MAAM,GAAK,MAAM,CAAC,CAC5H,GAAIQ,MAAM,GAAK,UAAU,CAAE,MAAO,CAAAlB,IAAI,CAACU,MAAM,GAAK,UAAU,EAAIpB,KAAK,CAACsD,IAAI,CAACN,CAAC,EAAIA,CAAC,CAACC,cAAc,GAAKvC,IAAI,CAACC,EAAE,EAAIqC,CAAC,CAAC5B,MAAM,GAAK,UAAU,CAAC,CACxI,MAAO,MAAK,CACd,CAAC,CAAC,CAEF;AACA,KAAM,CAAAkD,kBAAkB,CAAItE,KAAa,EAAK,CAC5C,KAAM,CAAAuE,OAAuD,CAAG,CAAC,CAAC,CAClE,KAAM,CAAAC,SAA0C,CAAG,EAAE,CAErDxE,KAAK,CAACyE,OAAO,CAAC/D,IAAI,EAAI,CACpB6D,OAAO,CAAC7D,IAAI,CAACC,EAAE,CAAC,CAAG,CAAE,GAAGD,IAAI,CAAEF,QAAQ,CAAE,EAAG,CAAC,CAC9C,CAAC,CAAC,CAEFR,KAAK,CAACyE,OAAO,CAAC/D,IAAI,EAAI,CACpB,GAAIA,IAAI,CAACuC,cAAc,GAAK,IAAI,CAAE,CAChCuB,SAAS,CAACE,IAAI,CAACH,OAAO,CAAC7D,IAAI,CAACC,EAAE,CAAC,CAAC,CAClC,CAAC,IAAM,KAAAgE,qBAAA,CACL,CAAAA,qBAAA,CAAAJ,OAAO,CAAC7D,IAAI,CAACuC,cAAc,CAAC,UAAA0B,qBAAA,iBAA5BA,qBAAA,CAA8BnE,QAAQ,CAACkE,IAAI,CAACH,OAAO,CAAC7D,IAAI,CAACC,EAAE,CAAC,CAAC,CAC/D,CACF,CAAC,CAAC,CAEF,MAAO,CAAA6D,SAAS,CAClB,CAAC,CAED,KAAM,CAAAI,aAAa,CAAGN,kBAAkB,CAACD,aAAa,CAAC,CAEvDtF,SAAS,CAAC,IAAM,CACdgD,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,CAACA,UAAU,CAAC,CAAC,CAEhB,mBACElC,KAAA,QAAKU,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAClCf,IAAA,OAAAe,QAAA,CAAI,cAAY,CAAI,CAAC,cACrBX,KAAA,UAAAW,QAAA,EAAO,mBAEL,cAAAX,KAAA,WAAQgB,KAAK,CAAEe,MAAO,CAACd,QAAQ,CAAGC,CAAC,EAAKc,SAAS,CAACd,CAAC,CAACC,MAAM,CAACH,KAAoD,CAAE,CAAAL,QAAA,eAC/Gf,IAAA,WAAQoB,KAAK,CAAC,KAAK,CAAAL,QAAA,CAAC,KAAG,CAAQ,CAAC,cAChCf,IAAA,WAAQoB,KAAK,CAAC,aAAa,CAAAL,QAAA,CAAC,aAAW,CAAQ,CAAC,cAChDf,IAAA,WAAQoB,KAAK,CAAC,MAAM,CAAAL,QAAA,CAAC,MAAI,CAAQ,CAAC,cAClCf,IAAA,WAAQoB,KAAK,CAAC,UAAU,CAAAL,QAAA,CAAC,UAAQ,CAAQ,CAAC,EACpC,CAAC,EACJ,CAAC,cACRf,IAAA,QAAKc,SAAS,CAAC,WAAW,CAAAC,QAAA,cACxBf,IAAA,CAACK,WAAW,EACVE,KAAK,CAAE4E,aAAc,CACrB3E,gBAAgB,CAAEA,gBAAiB,CACnCC,cAAc,CAAEA,cAAe,CAC/BC,aAAa,CAAEA,aAAc,CAC7BC,WAAW,CAAEA,WAAY,CACzBC,cAAc,CAAEA,cAAe,CAC/BC,cAAc,CAAEA,cAAe,CAChC,CAAC,CACC,CAAC,EACH,CAAC,CAEV,CAAC,CACD,KAAM,CAAAuE,GAAa,CAAGA,CAAA,GAAM,CAC1B,mBACEpF,IAAA,CAACN,MAAM,EAAAqB,QAAA,cACLX,KAAA,QAAKU,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BX,KAAA,QAAKU,SAAS,CAAC,SAAS,CAAAC,QAAA,eACtBf,IAAA,OAAAe,QAAA,CAAI,SAAO,CAAI,CAAC,cAChBX,KAAA,OAAAW,QAAA,eACEf,IAAA,OAAAe,QAAA,cAAIf,IAAA,CAACH,IAAI,EAACwF,EAAE,CAAC,GAAG,CAAAtE,QAAA,CAAC,WAAS,CAAM,CAAC,CAAI,CAAC,cACtCf,IAAA,OAAAe,QAAA,cAAIf,IAAA,CAACH,IAAI,EAACwF,EAAE,CAAC,WAAW,CAAAtE,QAAA,CAAC,cAAY,CAAM,CAAC,CAAI,CAAC,EAC/C,CAAC,EACF,CAAC,cACNf,IAAA,QAAKc,SAAS,CAAC,cAAc,CAAAC,QAAA,cAC3BX,KAAA,CAACR,MAAM,EAAAmB,QAAA,eACLf,IAAA,CAACL,KAAK,EAAC2F,IAAI,CAAC,GAAG,CAACC,OAAO,cAAEvF,IAAA,CAACiC,QAAQ,GAAE,CAAE,CAAE,CAAC,cACzCjC,IAAA,CAACL,KAAK,EAAC2F,IAAI,CAAC,WAAW,CAACC,OAAO,cAAEvF,IAAA,CAACF,YAAY,GAAE,CAAE,CAAE,CAAC,EAC/C,CAAC,CACN,CAAC,EACH,CAAC,CACA,CAAC,CAEb,CAAC,CAED,cAAe,CAAAsF,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}