{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\streamframe-task-manager\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport './App.css';\nimport TaskFormPage from './pages/TaskFormPage';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Function to render tasks recursively\nconst RenderTasks = ({\n  tasks,\n  toggleTaskStatus,\n  handleEditTask,\n  editingTaskId,\n  newTaskName,\n  setNewTaskName,\n  handleSaveEdit\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"task-list\",\n  children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-header\",\n      children: editingTaskId === task.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newTaskName,\n          onChange: e => setNewTaskName(e.target.value),\n          placeholder: \"New task name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveEdit,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditTask(task),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Task \", task.name, \" (ID: \", task.id, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), \" - Status: \", task.status, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-counts\",\n          children: [\"Dependencies: \", task.dependencyCount || 0, \" | Done: \", task.doneCount || 0, \" | Complete: \", task.completeCount || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"task-checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: task.status === 'DONE' || task.status === 'COMPLETE',\n            onChange: () => toggleTaskStatus(task)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), task.status === 'DONE' || task.status === 'COMPLETE' ? ' Mark as IN PROGRESS' : ' Mark as DONE']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditTask(task),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), task.children.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"child-tasks\",\n      children: /*#__PURE__*/_jsxDEV(RenderTasks, {\n        tasks: task.children,\n        toggleTaskStatus: toggleTaskStatus,\n        handleEditTask: handleEditTask,\n        editingTaskId: editingTaskId,\n        newTaskName: newTaskName,\n        setNewTaskName: setNewTaskName,\n        handleSaveEdit: handleSaveEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this)]\n  }, task.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 35,\n  columnNumber: 3\n}, this);\n_c = RenderTasks;\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('ALL');\n  const [editingTaskId, setEditingTaskId] = useState(null);\n  const [newTaskName, setNewTaskName] = useState('');\n  const fetchTasks = useCallback(async () => {\n    try {\n      const response = await fetch('http://localhost:5000/tasks');\n      if (!response.ok) {\n        throw new Error('Failed to fetch tasks');\n      }\n      const data = await response.json();\n      const tasksWithDependencies = await Promise.all(data.map(async task => {\n        const dependencyCount = await fetchDependencyCount(task.id);\n        const doneCount = await fetchDoneCount(task.id);\n        const completeCount = await fetchCompleteCount(task.id);\n        return {\n          ...task,\n          dependencyCount,\n          doneCount,\n          completeCount,\n          children: []\n        };\n      }));\n      setTasks(tasksWithDependencies);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  }, []);\n  const fetchDependencyCount = async taskId => {\n    // Your fetchDependencyCount function remains unchanged\n  };\n  const fetchDoneCount = async taskId => {\n    // Your fetchDoneCount function remains unchanged\n  };\n  const fetchCompleteCount = async taskId => {\n    // Your fetchCompleteCount function remains unchanged\n  };\n  const toggleTaskStatus = async task => {\n    // Your toggleTaskStatus function remains unchanged\n  };\n  const handleEditTask = task => {\n    // Your handleEditTask function remains unchanged\n  };\n  const handleSaveEdit = async () => {\n    // Your handleSaveEdit function remains unchanged\n  };\n\n  // Updated filtering logic to include child tasks\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'ALL') return true;\n    if (filter === 'IN_PROGRESS') return task.status === 'IN_PROGRESS';\n    if (filter === 'DONE') return task.status === 'DONE';\n    if (filter === 'COMPLETE') return task.status === 'COMPLETE';\n    return false;\n  });\n  const taskHierarchy = filteredTasks.reduce((acc, task) => {\n    if (task.parent_task_id === null) {\n      // If it's a parent task, find its children\n      acc.push({\n        ...task,\n        children: filteredTasks.filter(t => t.parent_task_id === task.id)\n      });\n    }\n    return acc;\n  }, []);\n  useEffect(() => {\n    fetchTasks();\n  }, [fetchTasks]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Listing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Filter by status:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: filter,\n        onChange: e => setFilter(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ALL\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"IN_PROGRESS\",\n          children: \"IN PROGRESS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"DONE\",\n          children: \"DONE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"COMPLETE\",\n          children: \"COMPLETE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list\",\n      children: /*#__PURE__*/_jsxDEV(RenderTasks, {\n        tasks: taskHierarchy,\n        toggleTaskStatus: toggleTaskStatus,\n        handleEditTask: handleEditTask,\n        editingTaskId: editingTaskId,\n        newTaskName: newTaskName,\n        setNewTaskName: setNewTaskName,\n        handleSaveEdit: handleSaveEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"Hp3o5IQb2eutozFZMXRQR4Z0WMc=\");\n_c2 = TaskList;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Sidebar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \"Task List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/new-task\",\n              children: \"Add New Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/new-task\",\n            element: /*#__PURE__*/_jsxDEV(TaskFormPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n};\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"RenderTasks\");\n$RefreshReg$(_c2, \"TaskList\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","BrowserRouter","Router","Route","Routes","Link","TaskFormPage","jsxDEV","_jsxDEV","Fragment","_Fragment","RenderTasks","tasks","toggleTaskStatus","handleEditTask","editingTaskId","newTaskName","setNewTaskName","handleSaveEdit","className","children","map","task","id","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","status","dependencyCount","doneCount","completeCount","checked","length","_c","TaskList","_s","setTasks","filter","setFilter","setEditingTaskId","fetchTasks","response","fetch","ok","Error","data","json","tasksWithDependencies","Promise","all","fetchDependencyCount","fetchDoneCount","fetchCompleteCount","error","console","taskId","filteredTasks","taskHierarchy","reduce","acc","parent_task_id","push","t","_c2","App","to","path","element","_c3","$RefreshReg$"],"sources":["C:/Users/Acer/streamframe-task-manager/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport './App.css';\nimport TaskFormPage from './pages/TaskFormPage';\n\ninterface Task {\n  id: number;\n  name: string;\n  status: 'IN_PROGRESS' | 'DONE' | 'COMPLETE';\n  parent_task_id: number | null;\n  dependencyCount?: number;\n  doneCount?: number;\n  completeCount?: number;\n  children: Task[];\n}\n\n// Function to render tasks recursively\nconst RenderTasks = ({\n  tasks,\n  toggleTaskStatus,\n  handleEditTask,\n  editingTaskId,\n  newTaskName,\n  setNewTaskName,\n  handleSaveEdit,\n}: {\n  tasks: Task[];\n  toggleTaskStatus: (task: Task) => void;\n  handleEditTask: (task: Task) => void;\n  editingTaskId: number | null;\n  newTaskName: string;\n  setNewTaskName: React.Dispatch<React.SetStateAction<string>>;\n  handleSaveEdit: () => void;\n}) => (\n  <div className=\"task-list\">\n    {tasks.map(task => (\n      <div key={task.id} className=\"task-item\">\n        <div className=\"task-header\">\n          {editingTaskId === task.id ? (\n            <>\n              <input\n                type=\"text\"\n                value={newTaskName}\n                onChange={(e) => setNewTaskName(e.target.value)}\n                placeholder=\"New task name\"\n              />\n              <button onClick={handleSaveEdit}>Save</button>\n              <button onClick={() => handleEditTask(task)}>Cancel</button>\n            </>\n          ) : (\n            <>\n              <strong>Task {task.name} (ID: {task.id})</strong> - Status: {task.status}\n              <div className=\"task-counts\">\n                Dependencies: {task.dependencyCount || 0} | Done: {task.doneCount || 0} | Complete: {task.completeCount || 0}\n              </div>\n              <label className=\"task-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  checked={task.status === 'DONE' || task.status === 'COMPLETE'}\n                  onChange={() => toggleTaskStatus(task)}\n                />\n                {task.status === 'DONE' || task.status === 'COMPLETE' ? ' Mark as IN PROGRESS' : ' Mark as DONE'}\n              </label>\n              <button onClick={() => handleEditTask(task)}>Edit</button>\n            </>\n          )}\n        </div>\n        {task.children.length > 0 && (\n          <div className=\"child-tasks\">\n            <RenderTasks\n              tasks={task.children}\n              toggleTaskStatus={toggleTaskStatus}\n              handleEditTask={handleEditTask}\n              editingTaskId={editingTaskId}\n              newTaskName={newTaskName}\n              setNewTaskName={setNewTaskName}\n              handleSaveEdit={handleSaveEdit}\n            />\n          </div>\n        )}\n      </div>\n    ))}\n  </div>\n);\n\nconst TaskList: React.FC = () => {\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [filter, setFilter] = useState<'ALL' | 'IN_PROGRESS' | 'DONE' | 'COMPLETE'>('ALL');\n  const [editingTaskId, setEditingTaskId] = useState<number | null>(null);\n  const [newTaskName, setNewTaskName] = useState<string>('');\n\n  const fetchTasks = useCallback(async () => {\n    try {\n      const response = await fetch('http://localhost:5000/tasks');\n      if (!response.ok) {\n        throw new Error('Failed to fetch tasks');\n      }\n      const data: Task[] = await response.json();\n\n      const tasksWithDependencies = await Promise.all(\n        data.map(async (task) => {\n          const dependencyCount = await fetchDependencyCount(task.id);\n          const doneCount = await fetchDoneCount(task.id);\n          const completeCount = await fetchCompleteCount(task.id);\n          return { ...task, dependencyCount, doneCount, completeCount, children: [] };\n        })\n      );\n\n      setTasks(tasksWithDependencies);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  }, []);\n\n  const fetchDependencyCount = async (taskId: number) => {\n    // Your fetchDependencyCount function remains unchanged\n  };\n\n  const fetchDoneCount = async (taskId: number) => {\n    // Your fetchDoneCount function remains unchanged\n  };\n\n  const fetchCompleteCount = async (taskId: number) => {\n    // Your fetchCompleteCount function remains unchanged\n  };\n\n  const toggleTaskStatus = async (task: Task) => {\n    // Your toggleTaskStatus function remains unchanged\n  };\n\n  const handleEditTask = (task: Task) => {\n    // Your handleEditTask function remains unchanged\n  };\n\n  const handleSaveEdit = async () => {\n    // Your handleSaveEdit function remains unchanged\n  };\n\n  // Updated filtering logic to include child tasks\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'ALL') return true;\n    if (filter === 'IN_PROGRESS') return task.status === 'IN_PROGRESS';\n    if (filter === 'DONE') return task.status === 'DONE';\n    if (filter === 'COMPLETE') return task.status === 'COMPLETE';\n    return false;\n  });\n\n  const taskHierarchy = filteredTasks.reduce<Task[]>((acc, task) => {\n    if (task.parent_task_id === null) {\n      // If it's a parent task, find its children\n      acc.push({ ...task, children: filteredTasks.filter(t => t.parent_task_id === task.id) });\n    }\n    return acc;\n  }, []);\n\n  useEffect(() => {\n    fetchTasks();\n  }, [fetchTasks]);\n\n  return (\n    <div className=\"task-list-container\">\n      <h1>Task Listing</h1>\n      <label>\n        Filter by status:\n        <select value={filter} onChange={(e) => setFilter(e.target.value as 'ALL' | 'IN_PROGRESS' | 'DONE' | 'COMPLETE')}>\n          <option value=\"ALL\">All</option>\n          <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n          <option value=\"DONE\">DONE</option>\n          <option value=\"COMPLETE\">COMPLETE</option>\n        </select>\n      </label>\n      <div className=\"task-list\">\n        <RenderTasks\n          tasks={taskHierarchy}\n          toggleTaskStatus={toggleTaskStatus}\n          handleEditTask={handleEditTask}\n          editingTaskId={editingTaskId}\n          newTaskName={newTaskName}\n          setNewTaskName={setNewTaskName}\n          handleSaveEdit={handleSaveEdit}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <div className=\"app-container\">\n        <div className=\"sidebar\">\n          <h2>Sidebar</h2>\n          <ul>\n            <li><Link to=\"/\">Task List</Link></li>\n            <li><Link to=\"/new-task\">Add New Task</Link></li>\n          </ul>\n        </div>\n        <div className=\"main-content\">\n          <Routes>\n            <Route path=\"/\" element={<TaskList />} />\n            <Route path=\"/new-task\" element={<TaskFormPage />} />\n          </Routes>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}