{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\streamframe-task-manager\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n\n  // Fetch tasks from the backend\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/tasks');\n        const data = await response.json();\n        setTasks(data); // Set tasks to state\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n    fetchTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Management System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.name, \" - \", task.status]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","fetchTasks","response","fetch","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","name","status","id","_c","$RefreshReg$"],"sources":["C:/Users/Acer/streamframe-task-manager/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\ninterface Task {\n  id: number;\n  name: string;\n  status: 'IN PROGRESS' | 'DONE' | 'COMPLETE';\n  parent_task_id: number | null;\n}\n\nconst App: React.FC = () => {\n  const [tasks, setTasks] = useState<Task[]>([]);\n\n  // Fetch tasks from the backend\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/tasks');\n        const data = await response.json();\n        setTasks(data);  // Set tasks to state\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n\n    fetchTasks();\n  }, []);\n\n  return (\n    <div>\n      <h1>Task Management System</h1>\n      <ul>\n        {tasks.map(task => (\n          <li key={task.id}>\n            {task.name} - {task.status}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASnD,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAS,EAAE,CAAC;;EAE9C;EACAD,SAAS,CAAC,MAAM;IACd,MAAMQ,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;QAC3D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAE;MACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAEDL,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BhB,OAAA;MAAAY,QAAA,EACGT,KAAK,CAACc,GAAG,CAACC,IAAI,iBACblB,OAAA;QAAAY,QAAA,GACGM,IAAI,CAACC,IAAI,EAAC,KAAG,EAACD,IAAI,CAACE,MAAM;MAAA,GADnBF,IAAI,CAACG,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACd,EAAA,CA9BID,GAAa;AAAAqB,EAAA,GAAbrB,GAAa;AAgCnB,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}