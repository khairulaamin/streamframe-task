{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\streamframe-task-manager\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport './App.css';\nimport TaskFormPage from './pages/TaskFormPage';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Function to render tasks recursively\nconst RenderTasks = ({\n  tasks,\n  toggleTaskStatus,\n  editingTaskId,\n  newTaskName,\n  handleEditTask,\n  handleSaveEdit,\n  setNewTaskName,\n  setEditingTaskId\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"task-list\",\n  children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-header\",\n      children: editingTaskId === task.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newTaskName,\n          onChange: e => setNewTaskName(e.target.value),\n          placeholder: \"New task name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveEdit,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditingTaskId(null),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Task \", task.name, \" (ID: \", task.id, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), \" - Status: \", task.status, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-counts\",\n          children: [\"Dependencies: \", task.dependencyCount || 0, \" | Done: \", task.doneCount || 0, \" | Complete: \", task.completeCount || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"task-checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: task.status === 'DONE' || task.status === 'COMPLETE',\n            onChange: () => toggleTaskStatus(task)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), task.status === 'DONE' || task.status === 'COMPLETE' ? ' Mark as IN PROGRESS' : ' Mark as DONE']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditTask(task),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), task.children.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"child-tasks\",\n      children: /*#__PURE__*/_jsxDEV(RenderTasks, {\n        tasks: task.children,\n        toggleTaskStatus: toggleTaskStatus,\n        editingTaskId: editingTaskId,\n        newTaskName: newTaskName,\n        handleEditTask: handleEditTask,\n        handleSaveEdit: handleSaveEdit,\n        setNewTaskName: setNewTaskName,\n        setEditingTaskId: setEditingTaskId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }, this)]\n  }, task.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 3\n}, this);\n_c = RenderTasks;\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('ALL');\n  const [editingTaskId, setEditingTaskId] = useState(null);\n  const [newTaskName, setNewTaskName] = useState('');\n  const fetchTasks = useCallback(async () => {\n    try {\n      const response = await fetch('http://localhost:5000/tasks');\n      if (!response.ok) {\n        throw new Error('Failed to fetch tasks');\n      }\n      const data = await response.json();\n      const tasksWithDependencies = await Promise.all(data.map(async task => {\n        const dependencyCount = await fetchDependencyCount(task.id);\n        const doneCount = await fetchDoneCount(task.id);\n        const completeCount = await fetchCompleteCount(task.id);\n        return {\n          ...task,\n          dependencyCount,\n          doneCount,\n          completeCount,\n          children: []\n        };\n      }));\n      setTasks(tasksWithDependencies);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  }, []);\n  const fetchDependencyCount = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:5000/tasks/${taskId}/dependencies`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch dependency count');\n      }\n      const data = await response.json();\n      return data.dependencyCount || 0;\n    } catch (error) {\n      console.error('Error fetching dependency count:', error);\n      return 0;\n    }\n  };\n  const fetchDoneCount = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:5000/tasks/${taskId}/done-count`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch DONE count');\n      }\n      const data = await response.json();\n      return data.doneCount || 0;\n    } catch (error) {\n      console.error('Error fetching DONE count:', error);\n      return 0;\n    }\n  };\n  const fetchCompleteCount = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:5000/tasks/${taskId}/complete-count`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch COMPLETE count');\n      }\n      const data = await response.json();\n      return data.completeCount || 0;\n    } catch (error) {\n      console.error('Error fetching COMPLETE count:', error);\n      return 0;\n    }\n  };\n  const toggleTaskStatus = async task => {\n    let updatedStatus;\n    const children = tasks.filter(t => t.parent_task_id === task.id);\n    if (children.length === 0) {\n      updatedStatus = task.status === 'COMPLETE' ? 'IN_PROGRESS' : 'COMPLETE';\n    } else {\n      const allComplete = children.every(child => child.status === 'COMPLETE');\n      const someInProgress = children.some(child => child.status === 'IN_PROGRESS');\n      if (task.status === 'COMPLETE') {\n        updatedStatus = 'IN_PROGRESS';\n      } else if (someInProgress) {\n        updatedStatus = 'DONE';\n      } else {\n        updatedStatus = 'COMPLETE';\n      }\n    }\n    try {\n      const response = await fetch(`http://localhost:5000/tasks/${task.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ...task,\n          status: updatedStatus\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update task status');\n      }\n      setTasks(prevTasks => prevTasks.map(t => {\n        if (t.id === task.id) {\n          return {\n            ...t,\n            status: updatedStatus\n          };\n        }\n        return t;\n      }));\n      const parentId = task.parent_task_id;\n      if (parentId) {\n        const siblings = tasks.filter(t => t.parent_task_id === parentId);\n        const allComplete = siblings.every(sibling => sibling.status === 'COMPLETE');\n        if (allComplete) {\n          await fetch(`http://localhost:5000/tasks/${parentId}`, {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              status: 'COMPLETE'\n            })\n          });\n          setTasks(prevTasks => prevTasks.map(t => {\n            if (t.id === parentId) {\n              return {\n                ...t,\n                status: 'COMPLETE'\n              };\n            }\n            return t;\n          }));\n        }\n      }\n      window.location.reload();\n    } catch (error) {\n      console.error('Error updating task status:', error);\n      alert('Failed to update task status. Please try again.');\n    }\n  };\n  const handleEditTask = task => {\n    setEditingTaskId(task.id);\n    setNewTaskName(task.name);\n  };\n  const handleSaveEdit = async () => {\n    if (editingTaskId !== null) {\n      try {\n        const response = await fetch(`http://localhost:5000/tasks/edit-name/${editingTaskId}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            ...tasks.find(t => t.id === editingTaskId),\n            name: newTaskName\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Failed to update task name');\n        }\n        setTasks(prevTasks => prevTasks.map(t => t.id === editingTaskId ? {\n          ...t,\n          name: newTaskName\n        } : t));\n        setEditingTaskId(null);\n        setNewTaskName('');\n      } catch (error) {\n        console.error('Error updating task name:', error);\n        alert('Failed to update task name. Please try again.');\n      }\n    }\n  };\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'ALL') return true;\n    if (filter === 'IN_PROGRESS') return task.status === 'IN_PROGRESS' || tasks.some(t => t.parent_task_id === task.id && t.status === 'IN_PROGRESS');\n    if (filter === 'DONE') return task.status === 'DONE' || tasks.some(t => t.parent_task_id === task.id && t.status === 'DONE');\n    if (filter === 'COMPLETE') return task.status === 'COMPLETE' || tasks.some(t => t.parent_task_id === task.id && t.status === 'COMPLETE');\n    return false;\n  });\n\n  // Function to build a nested structure\n  const buildTaskHierarchy = tasks => {\n    const taskMap = {};\n    const hierarchy = [];\n    tasks.forEach(task => {\n      taskMap[task.id] = {\n        ...task,\n        children: []\n      };\n    });\n    tasks.forEach(task => {\n      if (task.parent_task_id === null) {\n        hierarchy.push(taskMap[task.id]);\n      } else {\n        var _taskMap$task$parent_;\n        (_taskMap$task$parent_ = taskMap[task.parent_task_id]) === null || _taskMap$task$parent_ === void 0 ? void 0 : _taskMap$task$parent_.children.push(taskMap[task.id]);\n      }\n    });\n    return hierarchy;\n  };\n  const taskHierarchy = buildTaskHierarchy(filteredTasks);\n  useEffect(() => {\n    fetchTasks();\n  }, [fetchTasks]); // Include fetchTasks in dependency array\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Listing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Filter by status:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: filter,\n        onChange: e => setFilter(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ALL\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"IN_PROGRESS\",\n          children: \"IN PROGRESS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"DONE\",\n          children: \"DONE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"COMPLETE\",\n          children: \"COMPLETE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list\",\n      children: taskHierarchy.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-header\",\n          children: editingTaskId === task.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newTaskName,\n              onChange: e => setNewTaskName(e.target.value),\n              placeholder: \"New task name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSaveEdit,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setEditingTaskId(null),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"Task \", task.name, \" (ID: \", task.id, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 19\n            }, this), \" - Status: \", task.status, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-counts\",\n              children: [\"Dependencies: \", task.dependencyCount || 0, \" | Done: \", task.doneCount || 0, \" | Complete: \", task.completeCount || 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"task-checkbox\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: task.status === 'DONE' || task.status === 'COMPLETE',\n                onChange: () => toggleTaskStatus(task)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 21\n              }, this), task.status === 'DONE' || task.status === 'COMPLETE' ? ' Mark as IN PROGRESS' : ' Mark as DONE']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditTask(task),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this), task.children.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"child-tasks\",\n          children: /*#__PURE__*/_jsxDEV(RenderTasks, {\n            tasks: task.children,\n            toggleTaskStatus: toggleTaskStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 15\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 302,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"Hp3o5IQb2eutozFZMXRQR4Z0WMc=\");\n_c2 = TaskList;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Sidebar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \"Task List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/new-task\",\n              children: \"Add New Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/new-task\",\n            element: /*#__PURE__*/_jsxDEV(TaskFormPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 361,\n    columnNumber: 5\n  }, this);\n};\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"RenderTasks\");\n$RefreshReg$(_c2, \"TaskList\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","BrowserRouter","Router","Route","Routes","Link","TaskFormPage","jsxDEV","_jsxDEV","Fragment","_Fragment","RenderTasks","tasks","toggleTaskStatus","editingTaskId","newTaskName","handleEditTask","handleSaveEdit","setNewTaskName","setEditingTaskId","className","children","map","task","id","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","status","dependencyCount","doneCount","completeCount","checked","length","_c","TaskList","_s","setTasks","filter","setFilter","fetchTasks","response","fetch","ok","Error","data","json","tasksWithDependencies","Promise","all","fetchDependencyCount","fetchDoneCount","fetchCompleteCount","error","console","taskId","updatedStatus","t","parent_task_id","allComplete","every","child","someInProgress","some","method","headers","body","JSON","stringify","prevTasks","parentId","siblings","sibling","window","location","reload","alert","find","filteredTasks","buildTaskHierarchy","taskMap","hierarchy","forEach","push","_taskMap$task$parent_","taskHierarchy","_c2","App","to","path","element","_c3","$RefreshReg$"],"sources":["C:/Users/Acer/streamframe-task-manager/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport './App.css';\nimport TaskFormPage from './pages/TaskFormPage';\n\ninterface Task {\n  id: number;\n  name: string;\n  status: 'IN_PROGRESS' | 'DONE' | 'COMPLETE';\n  parent_task_id: number | null;\n  dependencyCount?: number;\n  doneCount?: number;\n  completeCount?: number;\n  children: Task[]; // Ensure children is always initialized as an array\n}\n\n// Function to render tasks recursively\nconst RenderTasks = ({\n  tasks,\n  toggleTaskStatus,\n  editingTaskId,\n  newTaskName,\n  handleEditTask,\n  handleSaveEdit,\n  setNewTaskName,\n  setEditingTaskId,\n}: {\n  tasks: Task[];\n  toggleTaskStatus: (task: Task) => void;\n  editingTaskId: number | null;\n  newTaskName: string;\n  handleEditTask: (task: Task) => void;\n  handleSaveEdit: () => Promise<void>;\n  setNewTaskName: React.Dispatch<React.SetStateAction<string>>;\n  setEditingTaskId: React.Dispatch<React.SetStateAction<number | null>>;\n}) => (\n  <div className=\"task-list\">\n    {tasks.map(task => (\n      <div key={task.id} className=\"task-item\">\n        <div className=\"task-header\">\n          {editingTaskId === task.id ? (\n            <>\n              <input\n                type=\"text\"\n                value={newTaskName}\n                onChange={(e) => setNewTaskName(e.target.value)}\n                placeholder=\"New task name\"\n              />\n              <button onClick={handleSaveEdit}>Save</button>\n              <button onClick={() => setEditingTaskId(null)}>Cancel</button>\n            </>\n          ) : (\n            <>\n              <strong>Task {task.name} (ID: {task.id})</strong> - Status: {task.status}\n              <div className=\"task-counts\">\n                Dependencies: {task.dependencyCount || 0} | Done: {task.doneCount || 0} | Complete: {task.completeCount || 0}\n              </div>\n              <label className=\"task-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  checked={task.status === 'DONE' || task.status === 'COMPLETE'}\n                  onChange={() => toggleTaskStatus(task)}\n                />\n                {task.status === 'DONE' || task.status === 'COMPLETE' ? ' Mark as IN PROGRESS' : ' Mark as DONE'}\n              </label>\n              <button onClick={() => handleEditTask(task)}>Edit</button>\n            </>\n          )}\n        </div>\n        {task.children.length > 0 && (\n          <div className=\"child-tasks\">\n            <RenderTasks\n              tasks={task.children}\n              toggleTaskStatus={toggleTaskStatus}\n              editingTaskId={editingTaskId}\n              newTaskName={newTaskName}\n              handleEditTask={handleEditTask}\n              handleSaveEdit={handleSaveEdit}\n              setNewTaskName={setNewTaskName}\n              setEditingTaskId={setEditingTaskId}\n            />\n          </div>\n        )}\n      </div>\n    ))}\n  </div>\n);\n\n\nconst TaskList: React.FC = () => {\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [filter, setFilter] = useState<'ALL' | 'IN_PROGRESS' | 'DONE' | 'COMPLETE'>('ALL');\n  const [editingTaskId, setEditingTaskId] = useState<number | null>(null);\n  const [newTaskName, setNewTaskName] = useState<string>('');\n\n  const fetchTasks = useCallback(async () => {\n    try {\n      const response = await fetch('http://localhost:5000/tasks');\n      if (!response.ok) {\n        throw new Error('Failed to fetch tasks');\n      }\n      const data: Task[] = await response.json();\n\n      const tasksWithDependencies = await Promise.all(\n        data.map(async (task) => {\n          const dependencyCount = await fetchDependencyCount(task.id);\n          const doneCount = await fetchDoneCount(task.id);\n          const completeCount = await fetchCompleteCount(task.id);\n          return { ...task, dependencyCount, doneCount, completeCount, children: [] };\n        })\n      );\n\n      setTasks(tasksWithDependencies);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  }, []);\n\n  const fetchDependencyCount = async (taskId: number) => {\n    try {\n      const response = await fetch(`http://localhost:5000/tasks/${taskId}/dependencies`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch dependency count');\n      }\n      const data = await response.json();\n      return data.dependencyCount || 0;\n    } catch (error) {\n      console.error('Error fetching dependency count:', error);\n      return 0;\n    }\n  };\n\n  const fetchDoneCount = async (taskId: number) => {\n    try {\n      const response = await fetch(`http://localhost:5000/tasks/${taskId}/done-count`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch DONE count');\n      }\n      const data = await response.json();\n      return data.doneCount || 0;\n    } catch (error) {\n      console.error('Error fetching DONE count:', error);\n      return 0;\n    }\n  };\n\n  const fetchCompleteCount = async (taskId: number) => {\n    try {\n      const response = await fetch(`http://localhost:5000/tasks/${taskId}/complete-count`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch COMPLETE count');\n      }\n      const data = await response.json();\n      return data.completeCount || 0;\n    } catch (error) {\n      console.error('Error fetching COMPLETE count:', error);\n      return 0;\n    }\n  };\n\n  const toggleTaskStatus = async (task: Task) => {\n    let updatedStatus: 'IN_PROGRESS' | 'DONE' | 'COMPLETE';\n\n    const children = tasks.filter(t => t.parent_task_id === task.id);\n\n    if (children.length === 0) {\n      updatedStatus = task.status === 'COMPLETE' ? 'IN_PROGRESS' : 'COMPLETE';\n    } else {\n      const allComplete = children.every(child => child.status === 'COMPLETE');\n      const someInProgress = children.some(child => child.status === 'IN_PROGRESS');\n\n      if (task.status === 'COMPLETE') {\n        updatedStatus = 'IN_PROGRESS';\n      } else if (someInProgress) {\n        updatedStatus = 'DONE';\n      } else {\n        updatedStatus = 'COMPLETE';\n      }\n    }\n\n    try {\n      const response = await fetch(`http://localhost:5000/tasks/${task.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ ...task, status: updatedStatus }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to update task status');\n      }\n\n      setTasks(prevTasks =>\n        prevTasks.map(t => {\n          if (t.id === task.id) {\n            return { ...t, status: updatedStatus };\n          }\n          return t;\n        })\n      );\n\n      const parentId = task.parent_task_id;\n      if (parentId) {\n        const siblings = tasks.filter(t => t.parent_task_id === parentId);\n        const allComplete = siblings.every(sibling => sibling.status === 'COMPLETE');\n\n        if (allComplete) {\n          await fetch(`http://localhost:5000/tasks/${parentId}`, {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ status: 'COMPLETE' }),\n          });\n\n          setTasks(prevTasks =>\n            prevTasks.map(t => {\n              if (t.id === parentId) {\n                return { ...t, status: 'COMPLETE' };\n              }\n              return t;\n            })\n          );\n        }\n      }\n\n      window.location.reload();\n    } catch (error) {\n      console.error('Error updating task status:', error);\n      alert('Failed to update task status. Please try again.');\n    }\n  };\n\n  const handleEditTask = (task: Task) => {\n    setEditingTaskId(task.id);\n    setNewTaskName(task.name);\n  };\n\n  const handleSaveEdit = async () => {\n    if (editingTaskId !== null) {\n      try {\n        const response = await fetch(`http://localhost:5000/tasks/edit-name/${editingTaskId}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ ...tasks.find(t => t.id === editingTaskId), name: newTaskName }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to update task name');\n        }\n\n        setTasks(prevTasks =>\n          prevTasks.map(t => (t.id === editingTaskId ? { ...t, name: newTaskName } : t))\n        );\n        setEditingTaskId(null);\n        setNewTaskName('');\n      } catch (error) {\n        console.error('Error updating task name:', error);\n        alert('Failed to update task name. Please try again.');\n      }\n    }\n  };\n\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'ALL') return true;\n    if (filter === 'IN_PROGRESS') return task.status === 'IN_PROGRESS' || tasks.some(t => t.parent_task_id === task.id && t.status === 'IN_PROGRESS');\n    if (filter === 'DONE') return task.status === 'DONE' || tasks.some(t => t.parent_task_id === task.id && t.status === 'DONE');\n    if (filter === 'COMPLETE') return task.status === 'COMPLETE' || tasks.some(t => t.parent_task_id === task.id && t.status === 'COMPLETE');\n    return false;\n  });\n\n  // Function to build a nested structure\n  const buildTaskHierarchy = (tasks: Task[]) => {\n    const taskMap: { [key: number]: Task & { children: Task[] } } = {};\n    const hierarchy: (Task & { children: Task[] })[] = [];\n\n    tasks.forEach(task => {\n      taskMap[task.id] = { ...task, children: [] };\n    });\n\n    tasks.forEach(task => {\n      if (task.parent_task_id === null) {\n        hierarchy.push(taskMap[task.id]);\n      } else {\n        taskMap[task.parent_task_id]?.children.push(taskMap[task.id]);\n      }\n    });\n\n    return hierarchy;\n  };\n\n  const taskHierarchy = buildTaskHierarchy(filteredTasks);\n\n  useEffect(() => {\n    fetchTasks();\n  }, [fetchTasks]); // Include fetchTasks in dependency array\n\n  return (\n    <div className=\"task-list-container\">\n      <h1>Task Listing</h1>\n      <label>\n        Filter by status:\n        <select value={filter} onChange={(e) => setFilter(e.target.value as 'ALL' | 'IN_PROGRESS' | 'DONE' | 'COMPLETE')}>\n          <option value=\"ALL\">All</option>\n          <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n          <option value=\"DONE\">DONE</option>\n          <option value=\"COMPLETE\">COMPLETE</option>\n        </select>\n      </label>\n      <div className=\"task-list\">\n        {taskHierarchy.map(task => (\n          <div key={task.id} className=\"task-item\">\n            <div className=\"task-header\">\n              {editingTaskId === task.id ? (\n                <>\n                  <input\n                    type=\"text\"\n                    value={newTaskName}\n                    onChange={(e) => setNewTaskName(e.target.value)}\n                    placeholder=\"New task name\"\n                  />\n                  <button onClick={handleSaveEdit}>Save</button>\n                  <button onClick={() => setEditingTaskId(null)}>Cancel</button>\n                </>\n              ) : (\n                <>\n                  <strong>Task {task.name} (ID: {task.id})</strong> - Status: {task.status}\n                  <div className=\"task-counts\">\n                    Dependencies: {task.dependencyCount || 0} | Done: {task.doneCount || 0} | Complete: {task.completeCount || 0}\n                  </div>\n                  <label className=\"task-checkbox\">\n                    <input\n                      type=\"checkbox\"\n                      checked={task.status === 'DONE' || task.status === 'COMPLETE'}\n                      onChange={() => toggleTaskStatus(task)}\n                    />\n                    {task.status === 'DONE' || task.status === 'COMPLETE' ? ' Mark as IN PROGRESS' : ' Mark as DONE'}\n                  </label>\n                  <button onClick={() => handleEditTask(task)}>Edit</button>\n                </>\n              )}\n            </div>\n            {task.children.length > 0 && (\n              <div className=\"child-tasks\">\n                {/* Assuming RenderTasks is another component to display child tasks */}\n                <RenderTasks tasks={task.children} toggleTaskStatus={toggleTaskStatus} />\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <div className=\"app-container\">\n        <div className=\"sidebar\">\n          <h2>Sidebar</h2>\n          <ul>\n            <li><Link to=\"/\">Task List</Link></li>\n            <li><Link to=\"/new-task\">Add New Task</Link></li>\n          </ul>\n        </div>\n        <div className=\"main-content\">\n          <Routes>\n            <Route path=\"/\" element={<TaskList />} />\n            <Route path=\"/new-task\" element={<TaskFormPage />} />\n          </Routes>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}