{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\streamframe-task-manager\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport './App.css';\nimport TaskFormPage from './pages/TaskFormPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('ALL');\n\n  // Fetch tasks from the backend\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/tasks');\n      if (!response.ok) {\n        throw new Error('Failed to fetch tasks');\n      }\n      const data = await response.json();\n\n      // Fetch dependency counts for each task\n      const tasksWithDependencies = await Promise.all(data.map(async task => {\n        const dependencyCount = await fetchDependencyCount(task.id);\n        return {\n          ...task,\n          dependencyCount\n        };\n      }));\n      setTasks(tasksWithDependencies);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n\n  // Fetch dependency count for a single task\n  const fetchDependencyCount = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:5000/tasks/${taskId}/dependencies`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch dependency count');\n      }\n      const data = await response.json();\n      return data.dependencyCount || 0;\n    } catch (error) {\n      console.error('Error fetching dependency count:', error);\n      return 0;\n    }\n  };\n\n  // Toggle task status\n  const toggleTaskStatus = async task => {\n    let updatedStatus;\n    const children = tasks.filter(t => t.parent_task_id === task.id);\n    if (children.length === 0) {\n      // No children, mark as COMPLETE when ticked\n      updatedStatus = task.status === 'COMPLETE' ? 'IN_PROGRESS' : 'COMPLETE';\n    } else {\n      // If it has children, check their status\n      const allComplete = children.every(child => child.status === 'COMPLETE');\n      const someInProgress = children.some(child => child.status === 'IN_PROGRESS');\n      if (task.status === 'COMPLETE') {\n        updatedStatus = 'IN_PROGRESS'; // Toggle back to IN_PROGRESS if already COMPLETE\n      } else if (someInProgress) {\n        updatedStatus = 'DONE'; // Some children are IN_PROGRESS, mark as DONE\n      } else {\n        updatedStatus = 'COMPLETE'; // All children are COMPLETE, mark as COMPLETE\n      }\n    }\n    try {\n      // Update task status in the backend\n      const response = await fetch(`http://localhost:5000/tasks/${task.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ...task,\n          status: updatedStatus\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update task status');\n      }\n\n      // Update the local state immediately\n      setTasks(prevTasks => prevTasks.map(t => {\n        if (t.id === task.id) {\n          return {\n            ...t,\n            status: updatedStatus\n          };\n        }\n        return t;\n      }));\n\n      // Check if we need to update the parent task\n      const parentId = task.parent_task_id;\n      if (parentId) {\n        const siblings = tasks.filter(t => t.parent_task_id === parentId);\n        const allComplete = siblings.every(sibling => sibling.status === 'COMPLETE');\n\n        // If all siblings are complete, update the parent task to COMPLETE\n        if (allComplete) {\n          await fetch(`http://localhost:5000/tasks/${parentId}`, {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              status: 'COMPLETE'\n            }) // Assuming the parent needs to be updated\n          });\n\n          // Update the parent task status in the local state\n          setTasks(prevTasks => prevTasks.map(t => {\n            if (t.id === parentId) {\n              return {\n                ...t,\n                status: 'COMPLETE'\n              };\n            }\n            return t;\n          }));\n        }\n      }\n\n      // Optionally, fetch all tasks again if you want to ensure consistency\n      // await fetchTasks();\n\n      window.location.reload();\n    } catch (error) {\n      console.error('Error updating task status:', error);\n      alert('Failed to update task status. Please try again.');\n    }\n  };\n\n  // Filter tasks based on selected status\n  const filteredTasks = filter === 'ALL' ? tasks : tasks.filter(task => task.status === filter);\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Listing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Filter by status:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: filter,\n        onChange: e => setFilter(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ALL\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"IN_PROGRESS\",\n          children: \"IN PROGRESS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"DONE\",\n          children: \"DONE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"COMPLETE\",\n          children: \"COMPLETE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Parent Task ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Number of Dependencies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredTasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.parent_task_id !== null ? task.parent_task_id : 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.dependencyCount !== undefined ? task.dependencyCount : '0'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: task.status === 'DONE' || task.status === 'COMPLETE',\n                onChange: () => toggleTaskStatus(task)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this), task.status === 'DONE' || task.status === 'COMPLETE' ? ' Mark as IN PROGRESS' : ' Mark as DONE']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n\n// Sidebar component\n_s(TaskList, \"JemSKEgOUJgSGPl2+QsZ86Ys8/Y=\");\n_c = TaskList;\nconst Sidebar = () => /*#__PURE__*/_jsxDEV(\"nav\", {\n  className: \"sidebar\",\n  children: /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Task Listing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/taskformpage\",\n        children: \"Task Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 201,\n  columnNumber: 3\n}, this);\n\n// Main App component with Router and Sidebar\n_c2 = Sidebar;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/taskformpage\",\n            element: /*#__PURE__*/_jsxDEV(TaskFormPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this);\n};\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TaskList\");\n$RefreshReg$(_c2, \"Sidebar\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Route","Routes","Link","TaskFormPage","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","filter","setFilter","fetchTasks","response","fetch","ok","Error","data","json","tasksWithDependencies","Promise","all","map","task","dependencyCount","fetchDependencyCount","id","error","console","taskId","toggleTaskStatus","updatedStatus","children","t","parent_task_id","length","status","allComplete","every","child","someInProgress","some","method","headers","body","JSON","stringify","prevTasks","parentId","siblings","sibling","window","location","reload","alert","filteredTasks","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","name","undefined","type","checked","_c","Sidebar","className","to","_c2","App","path","element","_c3","$RefreshReg$"],"sources":["C:/Users/Acer/streamframe-task-manager/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport './App.css';\nimport TaskFormPage from './pages/TaskFormPage';\n\ninterface Task {\n  id: number;\n  name: string;\n  status: 'IN_PROGRESS' | 'DONE' | 'COMPLETE';\n  parent_task_id: number | null;\n  dependencyCount?: number;\n  doneCount?: number; \n  completeCount?: number;\n}\n\nconst TaskList: React.FC = () => {\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [filter, setFilter] = useState<'ALL' | 'IN_PROGRESS' | 'DONE' | 'COMPLETE'>('ALL');\n\n  // Fetch tasks from the backend\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/tasks');\n      if (!response.ok) {\n        throw new Error('Failed to fetch tasks');\n      }\n      const data: Task[] = await response.json();\n\n      // Fetch dependency counts for each task\n      const tasksWithDependencies = await Promise.all(\n        data.map(async (task) => {\n          const dependencyCount = await fetchDependencyCount(task.id);\n          return { ...task, dependencyCount };\n        })\n      );\n\n      setTasks(tasksWithDependencies);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n\n  // Fetch dependency count for a single task\n  const fetchDependencyCount = async (taskId: number) => {\n    try {\n      const response = await fetch(`http://localhost:5000/tasks/${taskId}/dependencies`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch dependency count');\n      }\n      const data = await response.json();\n      return data.dependencyCount || 0;\n    } catch (error) {\n      console.error('Error fetching dependency count:', error);\n      return 0;\n    }\n  };\n\n// Toggle task status\nconst toggleTaskStatus = async (task: Task) => {\n  let updatedStatus: 'IN_PROGRESS' | 'DONE' | 'COMPLETE';\n  \n  const children = tasks.filter(t => t.parent_task_id === task.id);\n  \n  if (children.length === 0) {\n    // No children, mark as COMPLETE when ticked\n    updatedStatus = task.status === 'COMPLETE' ? 'IN_PROGRESS' : 'COMPLETE';\n  } else {\n    // If it has children, check their status\n    const allComplete = children.every(child => child.status === 'COMPLETE');\n    const someInProgress = children.some(child => child.status === 'IN_PROGRESS');\n\n    if (task.status === 'COMPLETE') {\n      updatedStatus = 'IN_PROGRESS'; // Toggle back to IN_PROGRESS if already COMPLETE\n    } else if (someInProgress) {\n      updatedStatus = 'DONE'; // Some children are IN_PROGRESS, mark as DONE\n    } else {\n      updatedStatus = 'COMPLETE'; // All children are COMPLETE, mark as COMPLETE\n    }\n  }\n\n    try {\n      // Update task status in the backend\n      const response = await fetch(`http://localhost:5000/tasks/${task.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ ...task, status: updatedStatus }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to update task status');\n      }\n\n      // Update the local state immediately\n      setTasks(prevTasks =>\n        prevTasks.map(t => {\n          if (t.id === task.id) {\n            return { ...t, status: updatedStatus };\n          }\n          return t;\n        })\n      );\n\n      // Check if we need to update the parent task\n      const parentId = task.parent_task_id;\n      if (parentId) {\n        const siblings = tasks.filter(t => t.parent_task_id === parentId);\n        const allComplete = siblings.every(sibling => sibling.status === 'COMPLETE');\n\n        // If all siblings are complete, update the parent task to COMPLETE\n        if (allComplete) {\n          await fetch(`http://localhost:5000/tasks/${parentId}`, {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ status: 'COMPLETE' }), // Assuming the parent needs to be updated\n          });\n\n          // Update the parent task status in the local state\n          setTasks(prevTasks =>\n            prevTasks.map(t => {\n              if (t.id === parentId) {\n                return { ...t, status: 'COMPLETE' };\n              }\n              return t;\n            })\n          );\n        }\n      }\n\n      // Optionally, fetch all tasks again if you want to ensure consistency\n      // await fetchTasks();\n\n      window.location.reload();\n    } catch (error) {\n      console.error('Error updating task status:', error);\n      alert('Failed to update task status. Please try again.');\n    }\n  };\n\n  // Filter tasks based on selected status\n  const filteredTasks = filter === 'ALL' ? tasks : tasks.filter(task => task.status === filter);\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  return (\n    <div>\n      <h1>Task Listing</h1>\n      <label>\n        Filter by status:\n        <select value={filter} onChange={(e) => setFilter(e.target.value as 'ALL' | 'IN_PROGRESS' | 'DONE' | 'COMPLETE')}>\n          <option value=\"ALL\">All</option>\n          <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n          <option value=\"DONE\">DONE</option>\n          <option value=\"COMPLETE\">COMPLETE</option>\n        </select>\n      </label>\n      <table>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Name</th>\n            <th>Status</th>\n            <th>Parent Task ID</th>\n            <th>Total Number of Dependencies</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredTasks.map(task => (\n            <tr key={task.id}>\n              <td>{task.id}</td>\n              <td>{task.name}</td>\n              <td>{task.status}</td>\n              <td>{task.parent_task_id !== null ? task.parent_task_id : 'N/A'}</td>\n              <td>{task.dependencyCount !== undefined ? task.dependencyCount : '0'}</td>\n              <td>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={task.status === 'DONE' || task.status === 'COMPLETE'}\n                    onChange={() => toggleTaskStatus(task)}\n                  />\n                  {task.status === 'DONE' || task.status === 'COMPLETE' ? ' Mark as IN PROGRESS' : ' Mark as DONE'}\n                </label>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\n// Sidebar component\nconst Sidebar: React.FC = () => (\n  <nav className=\"sidebar\">\n    <ul>\n      <li><Link to=\"/\">Task Listing</Link></li>\n      <li><Link to=\"/taskformpage\">Task Form</Link></li>\n    </ul>\n  </nav>\n);\n\n// Main App component with Router and Sidebar\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <div className=\"app-container\">\n        <Sidebar />\n        <div className=\"content\">\n          <Routes>\n            <Route path=\"/\" element={<TaskList />} />\n            <Route path=\"/taskformpage\" element={<TaskFormPage />} />\n          </Routes>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}