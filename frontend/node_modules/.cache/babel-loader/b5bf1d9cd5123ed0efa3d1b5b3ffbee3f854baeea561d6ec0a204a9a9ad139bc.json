{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\streamframe-task-manager\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport './App.css';\nimport TaskFormPage from './pages/TaskFormPage';\n\n// Task interface definition\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// TaskList component\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('ALL');\n\n  // Fetch tasks from the backend\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/tasks');\n      if (!response.ok) throw new Error('Failed to fetch tasks');\n      const data = await response.json();\n      const tasksWithDependencies = await Promise.all(data.map(fetchTaskDetails));\n      setTasks(tasksWithDependencies);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n\n  // Fetch details for a single task\n  const fetchTaskDetails = async task => {\n    const dependencyCount = await fetchDependencyCount(task.id);\n    const doneCount = await fetchDoneCount(task.id);\n    const completeCount = await fetchCompleteCount(task.id);\n    return {\n      ...task,\n      dependencyCount,\n      doneCount,\n      completeCount\n    };\n  };\n\n  // Fetch dependency count for a single task\n  const fetchDependencyCount = async taskId => {\n    return fetchCount(`http://localhost:5000/tasks/${taskId}/dependencies`);\n  };\n\n  // Fetch DONE count for a single task's dependencies\n  const fetchDoneCount = async taskId => {\n    return fetchCount(`http://localhost:5000/tasks/${taskId}/done-count`);\n  };\n\n  // Fetch COMPLETE count for a single task's dependencies\n  const fetchCompleteCount = async taskId => {\n    return fetchCount(`http://localhost:5000/tasks/${taskId}/complete-count`);\n  };\n\n  // Generic function to fetch counts\n  const fetchCount = async url => {\n    try {\n      const response = await fetch(url);\n      if (!response.ok) throw new Error('Failed to fetch count');\n      const data = await response.json();\n      return data.count || 0; // Assuming the backend returns an object with a count field\n    } catch (error) {\n      console.error('Error fetching count:', error);\n      return 0;\n    }\n  };\n\n  // Toggle task status\n  const toggleTaskStatus = async task => {\n    const updatedStatus = determineUpdatedStatus(task);\n    if (updatedStatus) {\n      await updateTaskStatus(task, updatedStatus);\n      await updateParentTaskStatus(task);\n      window.location.reload(); // Refresh the page to reflect changes\n    }\n  };\n\n  // Determine the new status based on the current status and children\n  const determineUpdatedStatus = task => {\n    const children = tasks.filter(t => t.parent_task_id === task.id);\n    if (children.length === 0) {\n      return task.status === 'COMPLETE' ? 'IN_PROGRESS' : 'COMPLETE';\n    }\n    const allComplete = children.every(child => child.status === 'COMPLETE');\n    const someInProgress = children.some(child => child.status === 'IN_PROGRESS');\n    if (task.status === 'COMPLETE') {\n      return 'IN_PROGRESS'; // Toggle back to IN_PROGRESS if already COMPLETE\n    }\n    return someInProgress ? 'DONE' : allComplete ? 'COMPLETE' : undefined;\n  };\n\n  // Update task status in the backend and local state\n  const updateTaskStatus = async (task, updatedStatus) => {\n    try {\n      const response = await fetch(`http://localhost:5000/tasks/${task.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ...task,\n          status: updatedStatus\n        })\n      });\n      if (!response.ok) throw new Error('Failed to update task status');\n      setTasks(prevTasks => prevTasks.map(t => t.id === task.id ? {\n        ...t,\n        status: updatedStatus\n      } : t));\n    } catch (error) {\n      console.error('Error updating task status:', error);\n      alert('Failed to update task status. Please try again.');\n    }\n  };\n\n  // Update the parent task status if needed\n  const updateParentTaskStatus = async task => {\n    const parentId = task.parent_task_id;\n    if (!parentId) return;\n    const siblings = tasks.filter(t => t.parent_task_id === parentId);\n    const allComplete = siblings.every(sibling => sibling.status === 'COMPLETE');\n    if (allComplete) {\n      await updateTaskStatus({\n        ...task,\n        id: parentId,\n        status: 'COMPLETE'\n      }, 'COMPLETE');\n    }\n  };\n\n  // Filter tasks based on selected status\n  const filteredTasks = filter === 'ALL' ? tasks : tasks.filter(task => task.status === filter);\n\n  // Function to render tasks recursively\n  const renderTasks = task => {\n    const children = tasks.filter(t => t.parent_task_id === task.id);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [task.name, \" (ID: \", task.id, \") - Status: \", task.status, /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Dependencies: \", task.dependencyCount || 0, \" | Done: \", task.doneCount || 0, \" | Complete: \", task.completeCount || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: task.status === 'DONE' || task.status === 'COMPLETE',\n            onChange: () => toggleTaskStatus(task)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), task.status === 'DONE' || task.status === 'COMPLETE' ? ' Mark as IN PROGRESS' : ' Mark as DONE']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), children.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Dependencies:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), children.map(renderTasks)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Listing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Filter by status:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: filter,\n        onChange: e => setFilter(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ALL\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"IN_PROGRESS\",\n          children: \"IN PROGRESS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"DONE\",\n          children: \"DONE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"COMPLETE\",\n          children: \"COMPLETE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: filteredTasks.map(task => renderTasks(task))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n\n// Sidebar component\n_s(TaskList, \"JemSKEgOUJgSGPl2+QsZ86Ys8/Y=\");\n_c = TaskList;\nconst Sidebar = () => /*#__PURE__*/_jsxDEV(\"nav\", {\n  className: \"sidebar\",\n  children: /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Task Listing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/taskformpage\",\n        children: \"Task Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 188,\n  columnNumber: 3\n}, this);\n\n// Main App component with Router and Sidebar\n_c2 = Sidebar;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/taskformpage\",\n            element: /*#__PURE__*/_jsxDEV(TaskFormPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TaskList\");\n$RefreshReg$(_c2, \"Sidebar\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Route","Routes","Link","TaskFormPage","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","filter","setFilter","fetchTasks","response","fetch","ok","Error","data","json","tasksWithDependencies","Promise","all","map","fetchTaskDetails","error","console","task","dependencyCount","fetchDependencyCount","id","doneCount","fetchDoneCount","completeCount","fetchCompleteCount","taskId","fetchCount","url","count","toggleTaskStatus","updatedStatus","determineUpdatedStatus","updateTaskStatus","updateParentTaskStatus","window","location","reload","children","t","parent_task_id","length","status","allComplete","every","child","someInProgress","some","undefined","method","headers","body","JSON","stringify","prevTasks","alert","parentId","siblings","sibling","filteredTasks","renderTasks","style","marginLeft","name","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","value","e","target","_c","Sidebar","className","to","_c2","App","path","element","_c3","$RefreshReg$"],"sources":["C:/Users/Acer/streamframe-task-manager/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport './App.css';\nimport TaskFormPage from './pages/TaskFormPage';\n\n// Task interface definition\ninterface Task {\n  id: number;\n  name: string;\n  status: 'IN_PROGRESS' | 'DONE' | 'COMPLETE';\n  parent_task_id: number | null;\n  dependencyCount?: number;\n  doneCount?: number; // New field for DONE count\n  completeCount?: number; // New field for COMPLETE count\n}\n\n// TaskList component\nconst TaskList: React.FC = () => {\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [filter, setFilter] = useState<'ALL' | 'IN_PROGRESS' | 'DONE' | 'COMPLETE'>('ALL');\n\n  // Fetch tasks from the backend\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/tasks');\n      if (!response.ok) throw new Error('Failed to fetch tasks');\n\n      const data: Task[] = await response.json();\n      const tasksWithDependencies = await Promise.all(data.map(fetchTaskDetails));\n      setTasks(tasksWithDependencies);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n\n  // Fetch details for a single task\n  const fetchTaskDetails = async (task: Task): Promise<Task> => {\n    const dependencyCount = await fetchDependencyCount(task.id);\n    const doneCount = await fetchDoneCount(task.id);\n    const completeCount = await fetchCompleteCount(task.id);\n    return { ...task, dependencyCount, doneCount, completeCount };\n  };\n\n  // Fetch dependency count for a single task\n  const fetchDependencyCount = async (taskId: number): Promise<number> => {\n    return fetchCount(`http://localhost:5000/tasks/${taskId}/dependencies`);\n  };\n\n  // Fetch DONE count for a single task's dependencies\n  const fetchDoneCount = async (taskId: number): Promise<number> => {\n    return fetchCount(`http://localhost:5000/tasks/${taskId}/done-count`);\n  };\n\n  // Fetch COMPLETE count for a single task's dependencies\n  const fetchCompleteCount = async (taskId: number): Promise<number> => {\n    return fetchCount(`http://localhost:5000/tasks/${taskId}/complete-count`);\n  };\n\n  // Generic function to fetch counts\n  const fetchCount = async (url: string): Promise<number> => {\n    try {\n      const response = await fetch(url);\n      if (!response.ok) throw new Error('Failed to fetch count');\n      const data = await response.json();\n      return data.count || 0; // Assuming the backend returns an object with a count field\n    } catch (error) {\n      console.error('Error fetching count:', error);\n      return 0;\n    }\n  };\n\n  // Toggle task status\n  const toggleTaskStatus = async (task: Task) => {\n    const updatedStatus = determineUpdatedStatus(task);\n    if (updatedStatus) {\n      await updateTaskStatus(task, updatedStatus);\n      await updateParentTaskStatus(task);\n      window.location.reload(); // Refresh the page to reflect changes\n    }\n  };\n\n  // Determine the new status based on the current status and children\n  const determineUpdatedStatus = (task: Task): 'IN_PROGRESS' | 'DONE' | 'COMPLETE' | undefined => {\n    const children = tasks.filter(t => t.parent_task_id === task.id);\n    if (children.length === 0) {\n      return task.status === 'COMPLETE' ? 'IN_PROGRESS' : 'COMPLETE';\n    }\n    \n    const allComplete = children.every(child => child.status === 'COMPLETE');\n    const someInProgress = children.some(child => child.status === 'IN_PROGRESS');\n\n    if (task.status === 'COMPLETE') {\n      return 'IN_PROGRESS'; // Toggle back to IN_PROGRESS if already COMPLETE\n    } \n    return someInProgress ? 'DONE' : (allComplete ? 'COMPLETE' : undefined);\n  };\n\n  // Update task status in the backend and local state\n  const updateTaskStatus = async (task: Task, updatedStatus: 'IN_PROGRESS' | 'DONE' | 'COMPLETE') => {\n    try {\n      const response = await fetch(`http://localhost:5000/tasks/${task.id}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ ...task, status: updatedStatus }),\n      });\n      if (!response.ok) throw new Error('Failed to update task status');\n\n      setTasks(prevTasks =>\n        prevTasks.map(t => (t.id === task.id ? { ...t, status: updatedStatus } : t))\n      );\n    } catch (error) {\n      console.error('Error updating task status:', error);\n      alert('Failed to update task status. Please try again.');\n    }\n  };\n\n  // Update the parent task status if needed\n  const updateParentTaskStatus = async (task: Task) => {\n    const parentId = task.parent_task_id;\n    if (!parentId) return;\n\n    const siblings = tasks.filter(t => t.parent_task_id === parentId);\n    const allComplete = siblings.every(sibling => sibling.status === 'COMPLETE');\n\n    if (allComplete) {\n      await updateTaskStatus({ ...task, id: parentId, status: 'COMPLETE' } as Task, 'COMPLETE');\n    }\n  };\n\n  // Filter tasks based on selected status\n  const filteredTasks = filter === 'ALL' ? tasks : tasks.filter(task => task.status === filter);\n\n  // Function to render tasks recursively\n  const renderTasks = (task: Task) => {\n    const children = tasks.filter(t => t.parent_task_id === task.id);\n\n    return (\n      <div style={{ marginLeft: '20px' }} key={task.id}>\n        <div>\n          {task.name} (ID: {task.id}) - Status: {task.status}\n          <div>\n            Dependencies: {task.dependencyCount || 0} | Done: {task.doneCount || 0} | Complete: {task.completeCount || 0}\n          </div>\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={task.status === 'DONE' || task.status === 'COMPLETE'}\n              onChange={() => toggleTaskStatus(task)}\n            />\n            {task.status === 'DONE' || task.status === 'COMPLETE' ? ' Mark as IN PROGRESS' : ' Mark as DONE'}\n          </label>\n        </div>\n        {children.length > 0 && (\n          <div>\n            <h3>Dependencies:</h3>\n            {children.map(renderTasks)}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  return (\n    <div>\n      <h1>Task Listing</h1>\n      <label>\n        Filter by status:\n        <select value={filter} onChange={(e) => setFilter(e.target.value as 'ALL' | 'IN_PROGRESS' | 'DONE' | 'COMPLETE')}>\n          <option value=\"ALL\">All</option>\n          <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n          <option value=\"DONE\">DONE</option>\n          <option value=\"COMPLETE\">COMPLETE</option>\n        </select>\n      </label>\n      <div>\n        {filteredTasks.map(task => renderTasks(task))}\n      </div>\n    </div>\n  );\n};\n\n// Sidebar component\nconst Sidebar: React.FC = () => (\n  <nav className=\"sidebar\">\n    <ul>\n      <li><Link to=\"/\">Task Listing</Link></li>\n      <li><Link to=\"/taskformpage\">Task Form</Link></li>\n    </ul>\n  </nav>\n);\n\n// Main App component with Router and Sidebar\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <div className=\"app-container\">\n        <Sidebar />\n        <div className=\"content\">\n          <Routes>\n            <Route path=\"/\" element={<TaskList />} />\n            <Route path=\"/taskformpage\" element={<TaskFormPage />} />\n          </Routes>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}